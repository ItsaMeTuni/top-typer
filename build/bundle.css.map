{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "checkbox.svelte",
    "dialog.svelte",
    "header.svelte",
    "labeled.svelte",
    "logo.svelte",
    "nav.svelte",
    "select.svelte",
    "slider.svelte",
    "typewriterRenderer.svelte",
    "typewriterStats.svelte",
    "layout.svelte",
    "stats.svelte",
    "type.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { Router, routes } from 'svelte-hash-router';\nimport Type from './views/type.svelte';\nimport Stats from './views/stats.svelte';\nimport About from './views/about.svelte';\nroutes.set({\n    '/': Type,\n    '/stats': Stats,\n    '/about': About,\n});\n</script>\n\n<Router></Router>\n\n<style lang=\"scss\">@import url(\"https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400;500;600;700;800;900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700;900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@200;300;400&display=swap\");\n:global(.row) {\n  display: flex;\n  flex-direction: row; }\n\n:global(.column) {\n  display: flex;\n  flex-direction: row; }\n\n:global(.center) {\n  justify-content: center; }\n\n:global(.left) {\n  justify-content: start; }\n\n:global(.right) {\n  justify-content: end; }\n\n:global(.middle) {\n  align-items: center; }\n\n:global(.top) {\n  align-items: start; }\n\n:global(.bottom) {\n  align-items: end; }\n\n:global(body) {\n  margin: 0;\n  background-color: #2D2D2D;\n  color: white;\n  font-family: 'Raleway', sans-serif;\n  font-size: 22px; }\n</style>",
    "<script lang=\"typescript\">import { mdiCheckboxMarkedCircleOutline, mdiCheckboxBlankCircleOutline } from '@mdi/js';\nexport let checked = false;\nexport let label = 'Test';\nexport let color = 'white';\nexport let invert = false;\nlet _checked;\n$: _checked = checked === !invert;\nlet checkPath;\n$: checkPath = _checked ? mdiCheckboxMarkedCircleOutline : mdiCheckboxBlankCircleOutline;\nfunction toggle() {\n    checked = !checked;\n}\n</script>\n\n\n    <div\n        class=\"checkbox\"\n        on:click={toggle}\n    >\n        <svg style={`--color: ${color};`}>\n            <path d={checkPath}></path>\n        </svg> \n        <span class=\"text\">{label}</span>\n    </div>\n\n\n<style lang=\"scss\">.checkbox {\n  margin: 16px 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n  user-select: none; }\n\nsvg {\n  margin-right: 10px;\n  display: block;\n  width: 1em;\n  height: 1em; }\n  svg path {\n    fill: var(--color); }\n</style>",
    "<script lang=\"typescript\">export let visible = true;\nfunction close() {\n    visible = false;\n}\n</script>\n\n\n    <div\n        class=\"dialog-bg\"\n        class:visible={visible}\n        on:click|self={close}\n    >\n        <div class=\"dialog\">\n            <slot></slot>\n            <div class=\"row center\">\n                <button on:click={close}>Close</button>\n            </div>\n        </div>\n    </div>\n\n\n<style lang=\"scss\">.dialog-bg {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: none;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.6); }\n  .dialog-bg.visible {\n    display: flex; }\n\n.dialog {\n  padding: 24px;\n  min-width: 25vw;\n  min-height: 30vh;\n  background-color: #2D2D2D;\n  border-radius: 3px; }\n  .dialog :global(h1) {\n    margin: 0;\n    font-weight: 400;\n    text-align: center; }\n  .dialog :global(h1, h2, h3) {\n    font-weight: 400; }\n\nbutton {\n  margin: 32px 0 16px 0;\n  font-size: .8em;\n  text-decoration: underline;\n  background: none;\n  border: none;\n  color: grey;\n  cursor: pointer; }\n</style>",
    "<script lang=\"typescript\">import Logo from \"./logo.svelte\";\nimport Nav from \"./nav.svelte\";\n</script>\n\n\n    <div class=\"header\">\n        <div>\n            <Logo></Logo>\n        </div>\n        <Nav></Nav>\n    </div>\n\n\n<style lang=\"scss\">.header {\n  padding: 16px 24px;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr auto 1fr;\n  align-items: center;\n  box-sizing: border-box; }\n</style>",
    "<script lang=\"typescript\">export let label = '';\nexport let horizontal = false;\n</script>\n\n\n    <div class=\"labeled\" class:horizontal={horizontal}>\n        <div class=\"label\">{label}</div>\n        <div class=\"content\">\n            <slot></slot>\n        </div>\n    </div>\n\n\n<style lang=\"scss\">.labeled {\n  margin-top: 16px;\n  margin-bottom: 8px; }\n  .labeled .label, .labeled .content {\n    display: block; }\n  .labeled.horizontal .label, .labeled.horizontal .content {\n    display: inline-block; }\n</style>",
    "\n    <a href=\"#/\" class=\"logo\">\n        Top Typer\n        <div>Type faster, much faster</div>\n    </a>\n\n\n<style lang=\"scss\">.logo {\n  display: inline-block;\n  font-weight: 200;\n  align-self: flex-start;\n  font-size: 46px;\n  text-transform: uppercase;\n  color: inherit;\n  text-decoration: none; }\n  .logo div {\n    margin-top: 0px;\n    margin-right: -15%;\n    font-size: 18px;\n    text-align: right;\n    text-transform: none; }\n</style>",
    "<script>\n\nconst links = [\n    {\n        text: 'Type',\n        path: '/#/',\n    },\n    {\n        text: 'Your stats',\n        path: '/#/stats',\n    },\n    {\n        text: 'About and FAQ',\n        path: '/#/about',\n    },\n].filter(x => x.path !== window.location.pathname);\n\n</script>\n\n\n    <div class=\"nav\">\n        {#each links as link}\n            <a href={link.path}>{link.text}</a>\n        {/each}\n    </div>\n\n\n<style lang=\"scss\">.nav a {\n  margin: 0 24px;\n  color: inherit;\n  text-decoration: none;\n  font-size: 22px; }\n</style>",
    "<script lang=\"typescript\">import { createEventDispatcher } from \"svelte\";\nexport let options = [];\nexport let selected = null;\nlet visible = false;\nlet title;\n$: title = selected ? selected.text : 'Select a value';\nconst dispatch = createEventDispatcher();\nlet btnDiv;\nfunction select(option) {\n    selected = option;\n    dispatch('change', selected);\n}\ndocument.addEventListener('click', (e) => {\n    visible = e.target === btnDiv && !visible;\n});\n</script>\n\n\n    <div\n        class=\"select\"\n        class:open={visible}\n    >\n        <div\n            bind:this={btnDiv}\n            class=\"button\"\n        >\n            <span>{title}</span>\n            <img src=\"/chevron-down.svg\" alt=\"\">\n        </div>\n        <div\n            class=\"options\"\n        >\n            {#each options as option}\n                <div\n                    class=\"option\"\n                    on:click={() => select(option)}\n                >{option.text}</div>\n            {/each}\n        </div>\n    </div>\n\n\n<style lang=\"scss\">.select {\n  position: relative;\n  padding: 6px 18px;\n  font-weight: 500;\n  color: rgba(255, 255, 255, 0.8);\n  background-color: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.6);\n  overflow: visible;\n  cursor: pointer;\n  user-select: none; }\n\n.button {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  pointer-events: all; }\n  .button > * {\n    pointer-events: none; }\n  .button img {\n    margin-left: 1.5ch;\n    width: 1.3em;\n    height: 1.3em;\n    opacity: .5; }\n\n.options {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  display: none;\n  z-index: 10; }\n  .open .options {\n    display: block; }\n  .options .option {\n    padding: 8px 18px;\n    color: rgba(255, 255, 255, 0.8);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.6);\n    border-left: 1px solid rgba(0, 0, 0, 0.6);\n    border-right: 1px solid rgba(0, 0, 0, 0.6);\n    background-color: #424242; }\n</style>",
    "<script lang=\"typescript\">import { createEventDispatcher } from \"svelte\";\nexport let value = 0;\nexport let min = 0;\nexport let max = 100;\nexport let step = 1;\nexport let disabled = false;\nexport let labelFormatter = (val) => val.toString();\nlet label;\n$: label = labelFormatter(value);\nconst dispatch = createEventDispatcher();\n</script>\n\n\n    <div class=\"slider\">\n        <input\n            type=\"range\"\n            bind:value={value}\n            min={min}\n            max={max}\n            step={step}\n            disabled={disabled}\n            on:input={(e) => dispatch('input', e)}\n        >\n        <div class=\"value\">{label}</div>\n    </div>\n\n\n<style lang=\"scss\">.slider {\n  display: flex;\n  flex-direction: row;\n  align-items: center; }\n\ninput {\n  flex: 1; }\n\n.value {\n  width: 6ch;\n  text-align: center; }\n</style>",
    "<script lang=\"typescript\">import { onDestroy, onMount } from \"svelte\";\n;\nclass Fragment {\n    constructor(text, type, word) {\n        this.text = '';\n        this.type = 'preview';\n        this.word = null;\n        this.text = text;\n        this.type = type;\n        this.word = word;\n    }\n}\nexport let typewriter;\nexport let onNext = () => { };\nconst framerate = 60;\nconst scrollSpeed = 15;\nlet typewriterEl;\nlet fragments = [];\nlet tickIntervalId;\nlet currCharFragment;\nonMount(() => {\n    typewriter.attachRenderListener(render);\n    render();\n    tickIntervalId = setInterval(tick, 1000 / framerate);\n});\nonDestroy(() => {\n    clearInterval(tickIntervalId);\n});\nfunction render() {\n    fragments = [];\n    const words = typewriter.getWords();\n    for (let wordIndex = 0; wordIndex < words.length; wordIndex++) {\n        const word = words[wordIndex];\n        const isPreviewWord = wordIndex > typewriter.getWordIndex();\n        for (let charIndex = 0; charIndex < word.text.length; charIndex++) {\n            let char = word.text[charIndex];\n            const isTypo = word.typos.includes(charIndex);\n            const isPreview = isPreviewWord || (wordIndex === typewriter.getWordIndex() && charIndex >= typewriter.getCharIndex());\n            const isCurrChar = (wordIndex === typewriter.getWordIndex() && charIndex == typewriter.getCharIndex());\n            let fragmentType;\n            if (isCurrChar)\n                fragmentType = 'curr-char';\n            else if (isPreview)\n                fragmentType = 'preview';\n            else if (isTypo)\n                fragmentType = 'error';\n            else\n                fragmentType = 'normal';\n            // Display space typos as underscores\n            if (isTypo && char === ' ') {\n                char = '_';\n            }\n            const lastFragment = fragments[fragments.length - 1];\n            if (fragments.length > 0 && lastFragment.type === fragmentType && lastFragment.word === word) {\n                fragments[fragments.length - 1].text += char;\n            }\n            else {\n                const fragment = new Fragment(char, fragmentType, word);\n                fragments.push(fragment);\n            }\n            if (isCurrChar) {\n                currCharFragment = fragments[fragments.length - 1];\n            }\n        }\n    }\n}\nfunction onKeypress(e) {\n    if (e.key === 'Enter' && typewriter.hasEnded) {\n        onNext();\n    }\n    typewriter.write(e.key);\n}\nfunction onKeydown(e) {\n    if (e.key === 'Backspace') {\n        typewriter.undo();\n    }\n}\nfunction tick() {\n    const curr = typewriterEl.scrollTop;\n    const target = currCharFragment.el.offsetTop;\n    typewriterEl.scrollBy(0, (target - curr) * (1 / framerate) * scrollSpeed);\n}\n</script>\n\n\n    <div class=\"wrapper\">    \n        <div\n            class=\"typewriter\"\n            bind:this={typewriterEl}\n            tabindex=\"0\"\n            on:keypress={onKeypress}\n            on:keydown={onKeydown}\n        >\n            {#each fragments as fragment}\n                <span\n                    class={fragment.type + ' fragment'}\n                    bind:this={fragment.el}\n                >{fragment.text}</span>\n            {/each}\n        </div>\n    </div>\n\n\n<style lang=\"scss\">.wrapper {\n  position: relative;\n  font-size: 32px;\n  font-family: 'Source Code Pro', monospace;\n  font-weight: 400;\n  line-height: 1.3em;\n  max-height: calc(1.3em * 3.8);\n  overflow: hidden; }\n  .wrapper::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: calc(1.3em);\n    background: linear-gradient(0deg, #2D2D2D 0%, rgba(45, 45, 45, 0) 100%);\n    pointer-events: none; }\n\n.typewriter {\n  width: 50ch;\n  height: calc(1.3em * 3.8);\n  overflow: hidden;\n  word-wrap: break-word; }\n  .typewriter span {\n    white-space: pre-wrap; }\n    .typewriter span.preview, .typewriter span.curr-char {\n      opacity: .4; }\n    .typewriter span.error {\n      color: #C24646; }\n  .typewriter:focus {\n    outline: none; }\n    .typewriter:focus span.curr-char {\n      color: #2D2D2D;\n      background-color: white; }\n</style>",
    "<script lang=\"typescript\">import { onMount } from \"svelte\";\nimport { Stat, getStats } from \"../statManager\";\n;\n;\nexport let typewriter;\nlet lastCalculatedStats = null;\nlet wpm = 0;\nlet wpmDiff = 0;\nlet accuracy = 0;\nlet accuracyDiff = 0;\nlet pace = 0;\nlet paceDiff = 0;\nonMount(() => {\n    setInterval(updateStats, 50);\n    cacheLastCalculatedStats();\n    typewriter.attachEndListener(cacheLastCalculatedStats);\n});\nfunction updateStats() {\n    if (typewriter === undefined || !typewriter.hasStarted) {\n        return;\n    }\n    const stats = Stat.fromTypewriter(typewriter).calculateStats();\n    wpm = stats.wpm;\n    accuracy = Math.floor(stats.keystrokeAccuracy * 100);\n    pace = Math.floor(stats.pace * 100);\n    if (lastCalculatedStats !== null) {\n        wpmDiff = Math.floor((wpm / lastCalculatedStats.wpm) * 100) - 100;\n        accuracyDiff = Math.floor((stats.keystrokeAccuracy / lastCalculatedStats.keystrokeAccuracy) * 100) - 100;\n        paceDiff = Math.floor((stats.pace / lastCalculatedStats.pace) * 100) - 100;\n    }\n}\nfunction cacheLastCalculatedStats() {\n    const stats = getStats();\n    const lastStat = stats[stats.length - 1];\n    if (lastStat) {\n        lastCalculatedStats = lastStat.calculateStats();\n    }\n    else {\n        lastCalculatedStats = null;\n    }\n}\n</script>\n\n\n    <div class=\"stats\">\n        <div class=\"stat\">\n            <div class=\"title\">Raw speed</div>\n            <div class=\"value\">{wpm}WPM</div>\n            <div\n                class=\"relative-diff\"\n                class:positive={wpmDiff > 1}\n            >\n                {wpmDiff >= 0 ? '+' : ''}{wpmDiff}%\n            </div>\n        </div>\n        <div class=\"stat\">\n            <div class=\"title\">Accuracy</div>\n            <div class=\"value\">{accuracy}%</div>\n            <div\n                class=\"relative-diff\"\n                class:positive={accuracyDiff > 1}\n            >\n                {accuracyDiff >= 0 ? '+' : ''}{accuracyDiff}%\n            </div>\n        </div>\n        <div class=\"stat\">\n            <div class=\"title\">Pace</div>\n            <div class=\"value\">{pace}%</div>\n            <div\n                class=\"relative-diff\"\n                class:positive={paceDiff > 1}\n            >\n                {paceDiff >= 0 ? '+' : ''}{paceDiff}%\n            </div>\n        </div>\n    </div>\n\n\n<style lang=\"scss\">.stats {\n  margin-top: 64px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  float: inline-start; }\n\n.stat {\n  margin: 0 32px;\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-template-rows: auto auto; }\n  .stat .title, .stat .value, .stat .relative-diff {\n    font-family: 'Lato', sans-serif; }\n  .stat .value, .stat .relative-diff {\n    grid-row: 2 / 3;\n    align-self: center; }\n  .stat .title, .stat .relative-diff {\n    font-size: 18px;\n    font-weight: 400; }\n  .stat .title {\n    opacity: .6; }\n  .stat .value {\n    font-size: 36px;\n    font-weight: 300; }\n  .stat .relative-diff {\n    margin-left: 12px;\n    color: #40A7F2; }\n    .stat .relative-diff.positive {\n      color: #50DB1F; }\n</style>",
    "<script>\nimport Header from \"./components/header.svelte\";\n\n</script>\n\n\n    <div class=\"layout\">\n        <Header></Header>\n        <div class=\"content\">\n            <slot></slot>\n        </div>\n    </div>\n\n\n<style lang=\"scss\">.layout {\n  padding-bottom: 3rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh; }\n  .layout .content {\n    max-width: 60vw; }\n    .layout .content :global(h1, h2) {\n      margin: 1em 0;\n      font-weight: 400; }\n    .layout .content :global(h1) {\n      text-align: center; }\n    .layout .content :global(p) {\n      opacity: .8; }\n    .layout .content :global(a) {\n      color: #48abfc;\n      text-decoration: none;\n      font-weight: 600; }\n</style>",
    "<script lang=\"typescript\">import { getStats } from \"../statManager\";\nimport { Line } from \"svelte-chartjs\";\nimport Header from \"../components/header.svelte\";\nimport Checkbox from \"../components/checkbox.svelte\";\nimport Layout from \"../layout.svelte\";\nconst stats = getStats();\nconst calculatedStats = stats.map(x => x.calculateStats());\nconst wpmHistory = calculatedStats.map(x => x.wpm);\nconst accuracyHistory = calculatedStats.map(x => Math.floor(x.keystrokeAccuracy * 100));\nconst pace = calculatedStats.map(x => Math.floor(x.pace * 100));\nconst dates = stats.map(x => new Date(x.timestamp));\nfunction makeLine(label, color, data, min, max, initialVisiblity, axisWeight) {\n    const dataset = {\n        label,\n        data: data.map((y, i) => ({ x: dates[i], y })),\n        fill: false,\n        borderColor: color,\n        pointBackgroundColor: color,\n        pointRadius: 6,\n        pointHoverRadius: 8,\n        yAxisID: label,\n        hidden: !initialVisiblity,\n    };\n    const yAxis = {\n        id: label,\n        type: 'linear',\n        display: 'auto',\n        weight: 1 / axisWeight,\n        ticks: {\n            suggestedMin: min,\n            suggestedMax: max,\n        },\n    };\n    return [dataset, yAxis];\n}\nfunction makeChart(datasetsAndAxes) {\n    return {\n        data: {\n            datasets: datasetsAndAxes.map(x => x[0]),\n        },\n        options: {\n            legend: {\n                display: false,\n            },\n            animation: {\n                duration: 0,\n            },\n            scales: {\n                yAxes: datasetsAndAxes.map(x => x[1]),\n                xAxes: [\n                    {\n                        type: 'time',\n                        distribution: 'series',\n                    },\n                ],\n            },\n        },\n    };\n}\nlet mainChart = makeChart([\n    makeLine('WPM', '#27D239', wpmHistory, 0, 130, true, 3),\n    makeLine('Accuracy', '#6892FF', accuracyHistory, 40, 100, false, 2),\n    makeLine('Pace', '#FF66C7', pace, 20, 100, false, 1),\n]);\nconst hardestKeysSessionCount = calculatedStats.length > 15 ? 15 : calculatedStats.length;\nconst last5CalcStats = calculatedStats.slice(calculatedStats.length - hardestKeysSessionCount - 1); //Last 15\nconst hardestKeysMap = new Map();\nfor (let i = 0; i < hardestKeysSessionCount; i++) {\n    const calcStat = last5CalcStats[i];\n    for (const [key, avgDelay] of calcStat.avgTypingDelay) {\n        let curr = hardestKeysMap.get(key) || [0, 0];\n        curr[0] += avgDelay;\n        curr[1] += 1;\n        hardestKeysMap.set(key, curr);\n    }\n}\nconst hardestKeysAveraged = new Map();\nfor (const [key, [totalDelay, delayCount]] of hardestKeysMap) {\n    hardestKeysAveraged.set(key, totalDelay / delayCount);\n}\nconst hardestKeys = Array.from(hardestKeysAveraged.entries()).sort((a, b) => {\n    if (a[1] > b[1])\n        return -1;\n    if (a[1] < b[1])\n        return 1;\n    if (a[1] === b[1])\n        return 0;\n})\n    .map(x => x[0])\n    .filter(x => x !== ' ' && x !== 'Enter');\n</script>\n\n\n    <Layout>\n        <h1>Your stats</h1>\n        <h2>Progress</h2>\n        <p>\n            Here is your performance progress.\n        </p>\n        <div class=\"chart-wrapper\">\n            <Line data={mainChart.data} options={mainChart.options}></Line>\n            <div class=\"checkboxes\">\n                {#each mainChart.data.datasets as dataset}\n                    <Checkbox bind:checked={dataset.hidden} label={dataset.label} color={dataset.borderColor} invert={true}></Checkbox>\n                {/each}\n            </div>\n        </div>\n        <br>\n        <h2>Character difficulty</h2>\n        <p>\n            Here is a list of characters ranked by the difficulty you seem to have when typing them, from hardest to easiest. The difficulty is measured\n            as the time you take to type each character, the harder the character is for you, the longer you will take\n            to type it.\n        </p>\n        <div class=\"hardest-keys\">\n            {#each hardestKeys as key}\n                <span>{key}</span>\n            {/each}\n        </div>\n    </Layout>\n\n\n<style lang=\"scss\">.chart-wrapper {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  max-width: 40vw; }\n\n.checkboxes {\n  margin-bottom: 64px;\n  margin-left: 40px;\n  flex: 0; }\n\n.hardest-keys span {\n  margin: 2px;\n  padding: 4px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 2ch;\n  height: 2ch;\n  font-family: 'Roboto Mono', monospace;\n  background-color: rgba(0, 0, 0, 0.4);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 2px;\n  box-sizing: content-box; }\n</style>",
    "<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Dialog from \"../components/dialog.svelte\";\nimport Header from \"../components/header.svelte\";\nimport Select from \"../components/select.svelte\";\nimport TypewriterRenderer from \"../components/typewriterRenderer.svelte\";\nimport TypewriterStats from \"../components/typewriterStats.svelte\";\nimport Layout from \"../layout.svelte\";\nimport Labeled from \"../components/labeled.svelte\";\nimport { Typewriter } from \"../typewriter\";\nimport { getRandomText } from \"../words\";\n;\nimport Slider from \"../components/slider.svelte\";\nlet typewriter = new Typewriter('');\nconst customConfig = {\n    wordCount: 15,\n    wordSizeRatios: {\n        short: .2,\n        medium: .6,\n        long: .2,\n    },\n};\nconst presets = [\n    {\n        text: 'Custom',\n        value: customConfig,\n    },\n    {\n        text: 'Normal',\n        value: {\n            wordCount: 15,\n            wordSizeRatios: {\n                short: .2,\n                medium: .6,\n                long: .2,\n            },\n        },\n    },\n    {\n        text: 'Endurance',\n        value: {\n            wordCount: 60,\n            wordSizeRatios: {\n                short: .2,\n                medium: .4,\n                long: .4,\n            },\n        },\n    },\n    {\n        text: 'Burst',\n        value: {\n            wordCount: 5,\n            wordSizeRatios: {\n                short: .3,\n                medium: .6,\n                long: .1,\n            },\n        },\n    },\n];\nlet selectedPreset = presets[1];\nlet isCustomPreset;\n$: isCustomPreset = selectedPreset === presets[0];\nlet configsDialogVisible = false;\nsetup();\nfunction setup() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const text = yield getRandomText(selectedPreset.value.wordCount, selectedPreset.value.wordSizeRatios);\n        typewriter.reset(text);\n    });\n}\nfunction onSliderInput() {\n    setup();\n}\nfunction onChangePreset() {\n    setup();\n}\nfunction percentageSliderFormatter(val) {\n    return Math.floor(val * 100).toString() + '%';\n}\n</script>\n\n\n    <div class=\"layout\">\n        <div>\n            <Header></Header>\n        </div>\n        <div class=\"typewriter\">\n            <TypewriterRenderer typewriter={typewriter} onNext={setup}></TypewriterRenderer>\n            <TypewriterStats typewriter={typewriter}></TypewriterStats>\n        </div>\n        <div class=\"settings-btn-wrapper\">\n            <button on:click={() => configsDialogVisible = true}>Settings</button>\n        </div>\n        <Dialog bind:visible={configsDialogVisible}>\n            <h1>Options</h1>\n            <br>\n            <div class=\"row center\">\n                <Labeled label=\"Preset\" horizontal>\n                    <Select options={presets} bind:selected={selectedPreset} on:change={onChangePreset}></Select>\n                </Labeled>\n            </div>\n            <h2>Customize</h2>\n            <Labeled label=\"Word count\">\n                <Slider\n                    min={3}\n                    max={200}\n                    step={1}\n                    bind:value={selectedPreset.value.wordCount}\n                    on:input={onSliderInput}\n                    disabled={!isCustomPreset}\n                ></Slider>\n            </Labeled>\n            <Labeled label=\"% of short words\">\n                <Slider\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    bind:value={selectedPreset.value.wordSizeRatios.short}\n                    on:input={onSliderInput}\n                    labelFormatter={percentageSliderFormatter}\n                    disabled={!isCustomPreset}\n                ></Slider>\n            </Labeled>\n            <Labeled label=\"% of medium words\">\n                <Slider\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    bind:value={selectedPreset.value.wordSizeRatios.medium}\n                    on:input={onSliderInput}\n                    labelFormatter={percentageSliderFormatter}\n                    disabled={!isCustomPreset}\n                ></Slider>\n            </Labeled>\n            <Labeled label=\"% of long words\">\n                <Slider\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    bind:value={selectedPreset.value.wordSizeRatios.long}\n                    on:input={onSliderInput}\n                    labelFormatter={percentageSliderFormatter}\n                    disabled={!isCustomPreset}\n                ></Slider>\n            </Labeled>\n        </Dialog>\n    </div>\n\n\n<style lang=\"scss\">.layout {\n  display: grid;\n  grid-template-rows: 1fr auto 1fr;\n  height: 100vh; }\n\n.typewriter {\n  justify-self: center; }\n\n.settings-btn-wrapper {\n  padding-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center; }\n  .settings-btn-wrapper button {\n    font-size: .8em;\n    text-decoration: underline;\n    background: none;\n    border: none;\n    color: grey;\n    cursor: pointer; }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}